---
### START Module/App Configuration ###
nginx_conf_dir:               /etc/nginx
nginx_log_dir:                /var/log/nginx
nginx_run_dir:                /var/nginx
nginx_temp_dir:               /tmp
nginx_pid_file:               /var/run/nginx.pid
nginx_conf_fragments_dir:     /tmp/nginx-config-assemble.d

nginx_client_body_temp_path:  "{{ nginx_run_dir }}/client_body_temp"
nginx_daemon_user:            'www-data'
nginx_global_owner:           'root'
nginx_global_group:           "{{ nginx_root_group }}"
nginx_global_mode:            '0644'
nginx_http_access_log:        "{{ nginx_log_dir }}/access.log"
nginx_nginx_error_log:        "{{ nginx_log_dir }}/error.log"
nginx_root_group:             root
nginx_proxy_temp_path:        "{{ nginx_run_dir }}/proxy_temp"
nginx_sites_available_owner:  'root'
nginx_sites_available_group:  "{{ nginx_root_group }}"
nginx_sites_available_mode:   '0644'
nginx_super_user:             true
nginx_confd_purge:            false
nginx_vhost_purge:            false
nginx_manage_repo:            true
nginx_version:                '*'
nginx_repo:
nginx_mainline_repo:
nginx_yum_repo_os_distro: "rhel"
nginx_yum_repo_baseurl: "http://nginx.org/packages/{{ nginx_yum_repo_os_distro }}/{{ ansible_distribution_major_version }}/$basearch/"
nginx_mainline_yum_repo_baseurl: "http://nginx.org/packages/mainline/{{ nginx_yum_repo_os_distro }}/{{ ansible_distribution_major_version }}/$basearch/"


### START Nginx Configuration ###
nginx_client_body_buffer_size:        '128k'
nginx_client_max_body_size:           '10m'
nginx_events_use:                     false
nginx_fastcgi_cache_inactive:         '20m'
nginx_fastcgi_cache_key:              false
nginx_fastcgi_cache_keys_zone:        'd3:100m'
nginx_fastcgi_cache_levels:           '1'
nginx_fastcgi_cache_max_size:         '500m'
nginx_fastcgi_cache_path:             false
nginx_fastcgi_cache_use_stale:        false
nginx_fastcgi_params_file:            "{{ nginx_conf_dir }}/fastcgi_params"
nginx_uwsgi_params_file:              "{{ nginx_conf_dir }}/uwsgi_params"
nginx_gzip:                           'on'
nginx_gzip_buffers:
nginx_gzip_comp_level:                1
nginx_gzip_disable:                   'msie6'
nginx_gzip_min_length:                20
nginx_gzip_http_version:              1.1
nginx_gzip_proxied:                   'off'
nginx_gzip_types:                     'text/html'
nginx_gzip_vary:                      'off'
nginx_http_cfg_append:                false
nginx_http_tcp_nodelay:               'on'
nginx_http_tcp_nopush:                'off'
nginx_keepalive_timeout:              '65'
nginx_log_format:                     {}
nginx_mail:                           false
nginx_multi_accept:                   'off'
nginx_names_hash_bucket_size:         '64'
nginx_names_hash_max_size:            '512'
nginx_nginx_cfg_prepend:              {}
nginx_proxy_buffers:                  '32 4k'
nginx_proxy_buffer_size:              '8k'
nginx_proxy_cache_inactive:           '20m'
nginx_proxy_cache_keys_zone:          'd2:100m'
nginx_proxy_cache_levels:             '1'
nginx_proxy_cache_max_size:           '500m'
nginx_proxy_cache_path:               false
nginx_proxy_connect_timeout:          '90'
nginx_proxy_headers_hash_bucket_size: '64'
nginx_proxy_http_version:             1.1
nginx_proxy_read_timeout:             '90'
nginx_proxy_redirect:                 'off'
nginx_proxy_send_timeout:             '90'
nginx_proxy_set_header:
  - 'Host $host'
  - 'X-Real-IP $remote_addr'
  - 'X-Forwarded-For $proxy_add_x_forwarded_for'
nginx_sendfile:                       'on'
nginx_server_tokens:                  'off'
nginx_spdy:                           'off'
nginx_ssl_stapling:                   'off'
nginx_types_hash_bucket_size:         '512'
nginx_types_hash_max_size:            '1024'
nginx_worker_connections:             '1024'
nginx_worker_processes:               '1'
nginx_worker_rlimit_nofile:           '1024'
nginx_ssl_ciphers:                    "ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA"
nginx_ssl_cache:                      'shared:SSL:10m'
nginx_ssl_session_timeout:            '5m'
nginx_ssl_protocols:                  'TLSv1 TLSv1.1 TLSv1.2'
nginx_index_files:                    [ 'index.html', 'index.htm', 'index.php'] # use an empty list to disable
### END Nginx Configuration ###


### START Package Configuration ###
nginx_package_name:     nginx
nginx_package_source:   nginx
nginx_package_flavor:
### END Package Configuration ###


### START Service Configuation ###
nginx_configtest_enable:               false
nginx_service_state:                   started
nginx_service_enable:                  true
nginx_service_flags:
nginx_service_restart:                 '/etc/init.d/nginx configtest && /etc/init.d/nginx restart'
nginx_service_name:                    nginx
### END Service Configuration ###


### START Geo ###
config_nginx_geo:    false
nginx_geo:                          # List of geo mapping entries to create
  - name:                           # Name of a geo mapping entry to create
    networks:        {}             # Hash of geo lookup keys and resultant values
    default:         ''             # Sets the resulting value if the source value fails to match any of the variants.
    ranges:          false          # Indicates that lookup keys (network addresses) are specified as ranges.
    address:         ''             # Nginx defaults to using $remote_addr for testing. This allows you to override that with another variable name (automatically prefixed with $)
    delete:          ''             # deletes the specified network (see: geo module docs)
    proxies:         []             # Hash of network->value mappings.
    proxy_recursive: false          # Changes the behaviour of address acquisition when specifying trusted proxies via 'proxies' directive.

## Example: nginx_geo
## config_nginx_geo:     true
## nginx_geo:
##   - name:             client_network
##     ranges:           false
##     default:          extra
##     proxy_recursive:  false
##     proxies:          [ '192.168.99.99' ]
##     networks:
##       '10.0.0.0/8':      'intra'
##       '172.16.0.0/12':   'intra'
##       '192.168.0.0/16':  'intra'
### END Geo ###


### START Map ###
config_nginx_map: false
nginx_map:                            # List of mapping entries to create
  - name:         client_network      # Name of a mapping entry to create
    string:       $http_host          # Source string or variable to provide mapping for
    mappings:     {}                  # Hash of map lookup keys and resultant values
    default:      ''                  # Sets the resulting value if the source values fails to match any of the variants.
    hostnames:    false               # Indicates that source values can be hostnames with a prefix or suffix mask.

## Example: nginx_map
## config_nginx_map:     true
## nginx_map:
##   - name:      client_network
##     hostnames: true
##     default:   'ny-pool-1'
##     string:    $http_host
##     mappings:
##       '*.nyc.example.com': 'ny-pool-1'
##       '*.sf.example.com': 'sf-pool-1'
### END Map ###


### START Mailhost ###
config_nginx_mailhost:              false
nginx_mailhost:
  - vhost:                        # Name of mailhost vhost to create
    listen_port:         80
    listen_ip:           '*'      # accepts a string or a list of IPs
    listen_options:      ''
    ipv6_enable:         false
    ipv6_listen_ip:      '::'     # accepts a string or a list of IPs
    ipv6_listen_port:    80
    ipv6_listen_options: 'default ipv6only=on'
    ssl:                 false
    ssl_cert:            ''       # pre-generated SSL Certificate file
    ssl_key:             ''       # pre-generated SSL Key file
    ssl_port:            443
    starttls:            'off'    # enable STARTTLS support - (on|off|only)
    protocol:            ''       # mail protocol to use - (imap|pop3|smtp)
    auth_http:           ''       # HTTP-like server for authorization
    xclient:             'on'     # whether to use xclient for smtp (on|off)
    server_name:         [  ]     # list of mailhostnames for which this mailhost will respond.
### END Mailhost ###

### START Upstream ###
config_nginx_upstream:  false
nginx_upstream:
  - name: proxypass                    # Name of upstream to create
    members: []                        # List of member URIs for NGINX to connect to.
    upstream_cfg_prepend: {}           # Expects a hash with custom directives to put before anything else inside upstream
    upstream_fail_timeout: '10s'       # Set the fail_timeout for the upstream. Default is 10 seconds - As that is what Nginx does normally.

## Example: nginx_upstream
## config_nginx_upstream:  true
## nginx_upstream:
##   - name: proxypass
##     members:
##       - 'localhost:3000'
##       - 'localhost:3001'
##       - 'localhost:3002'
##     upstream_cfg_prepend:
##       ip_hash:    ''
##       keepalive:  20
##     upstream_fail_timeout: '10s'
### END Upstream ###


### START Location ###
config_nginx_location:    false
nginx_location:                                                               # A list of location entries. Creates location entries within a vHost
  - location:              /hello/world                                       # Specifies the URI associated with this location
    vhost:                  myvhost.internal                                  # vHost for this location entry to include with
    internal:              false                                              # Indicates whether or not this location can be used for internal requests only.
    www_root:              /var/www                                           # Specified the location on disk for files to be read from. Cannot be set in conjuction with proxy_pass
    autoindex:                                                                # Set to 'on' to activate autoindex directory listing.
    index_files:           [ 'index.html', 'index.htm', 'index.php' ]         # Index files for NGINX to read when traversing a directory
    proxy_pass:            'http://localhost:8080'                            # Proxy server for a location to connect to. Can be used with nginx_upstream
    proxy_redirect:        "{{ nginx_proxy_redirect }}"                       # Sets the text, which must be changed in response-header "Location" and "Refresh" in the response of the proxied server.
    proxy_read_timeout:    "{{ nginx_proxy_read_timeout }}"                   # Override the default the proxy read timeout value of 90s.
    proxy_connect_timeout: "{{ nginx_proxy_connect_timeout }}"                # Override the default the proxy connect timeout value of 90s.
    proxy_set_header:      "{{ nginx_proxy_set_header }}"                     # List of vhost headers to set
    fastcgi_pass:          'localhost:9000'                                   # Location of fastcgi (host:port)
    fastcgi_param:                                                            # Set additional custom fastcgi_params
      REQUEST_METHOD:   '$request_method'
      CONTENT_TYPE:     '$content_type'
      CONTENT_LENGTH:   '$content_length'
    fastcgi_params_file:   "{{ nginx_conf_dir }}/fastcgi_params"              # Optional alternative fastcgi_params file to use
    fastcgi_script:                                                           # optional SCRIPT_FILE parameter
    fastcgi_split_path:                                                       # Allows settings of fastcgi_split_path_info so that you can split the script_name and path_info via regex
    uwsgi_pass:            'localhost:9000'                                   # location of uwsgi (host:port)
    uwsgi_params_file:     "{{ nginx_conf_dir }}/uwsgi_params"                # optional alternative uwsgi_params file to use
    ssl:                                                                      # Indicates whether to setup SSL bindings for this location
    ssl_only:                                                                 # Required if the SSL and normal vHost have the same port.
    location_alias:        html/test/dir                                      # Path to be used as basis for serving requests for this location
    location_allow:                                                           # Locations to allow connections from
    location_deny:                                                            # Locations to deny connections from
    stub_status:            false                                             # If true it will point configure module stub_status to provide nginx stats on location
    raw_prepend:                                                              # A List of strings to prepend the location directive (after custom_cfg directives). Do not forget semicolon on each line that requires one.
    raw_append:                                                               # A List of strings to append the location directive (after custom_cfg directives). Do not forget semicolon on each line that requires one.
    location_custom_cfg:                                                      # Expects a hash with custom directives, cannot be used with other location types (proxy, fastcgi, root, or stub_status)
    location_cfg_prepend:                                                     # Expects a hash with extra directives to put before anything else inside location (used with all other types except custom_cfg)
    location_cfg_append:                                                      # Expects a hash with extra directives to put after anything else inside location (used with all other types except custom_cfg)
    location_custom_cfg_prepend:                                              # Expects a list with extra directives to put before anything else inside location (used with all other types except custom_cfg). Used for logical structures such as 'if'.
    location_custom_cfg_append:                                               # Expects a list with extra directives to put before anything else inside location (used with all other types except custom_cfg). Used for logical structures such as 'if'.
    include:                                                                  #
    try_files:                                                                # A list of file locations to try
    proxy_cache:           false                                              # Sets name of zone for caching. The same zone can be used in multiple places.
    proxy_cache_key:                                                          # Override the default proxy_cache_key of $scheme$proxy_host$request_uri
    proxy_cache_use_stale:                                                    # Override the default proxy_cache_use_stale value of 'off'.
    proxy_cache_valid:     false                                              # Sets the time for caching different replies.
    proxy_method:                                                             # If defined, overrides the HTTP method of the request to be passed to the backend.
    proxy_set_body:                                                           # If defined, sets the body passed to the backend
    auth_basic:                                                               # HTTP Basic authentication
    auth_basic_user_file:                                                     # Sets the htpasswd filename for the authentication realm
    rewrite_rules:         []                                                 # List of rewrite_rules.
    mp4:                   false                                              # Indicates whether or not this location can be used for mp4 streaming.
    flv:                   false                                              # Indicates whether or not this location can be used for flv streaming.
### END Location ###


### START vHost ###
config_nginx_vhost:               true
nginx_vhost:                                                                  # List of vHosts to create.
  - vhost:                        myvhost.internal                            # Name of vHost to create
    enable:                       true                                        # Whether to enable vHost or not. "true" creates a link in sites-enabled dir
    listen_ip:                    '*'                                         # Default IP address for NGINX to listen with this vHost on.
    listen_port:                  '80'                                        # Default IP Port for NGINX to listen with this vHost on. Defaults to TCP 80
    listen_options:                                                           # Extra options for listen directive like 'default' to catchall.
    location_allow:               []                                          # List of locations to allow connections from.
    location_deny:                []                                          # List of locations to deny connections from.
    ipv6_enable:                  false                                       # Enable or disable IPv6 support
    ipv6_listen_ip:               '::'                                        # Default IPv6 address for NGINX to listen with this vHost on.
    ipv6_listen_port:             '80'                                        # Default IPv6 Port for NGINX to listen with this vHost on.
    ipv6_listen_options:          'default ipv6only=on'                       # Extra options for listen directive like 'default' to catchall.
    add_header:                   {}                                          # A hash of headers. Add headers to the HTTP  response when response code is 200, 204, 301, 302 or 304.
    ssl:                          false                                       # Indicates whether to setup SSL bindings for this vhost.
    ssl_port:                     443                                         # Default IP Port for NGINX to listen with this SSL vhost on. Defaults to TCP 443
    ssl_listen_option:            true                                        #
    ssl_protocols:                'TLSv1 TLSv1.1 TLSv1.2'                     # SSL protocols enabled. Defaults to 'TLSv1 TLSv1.1 TLSv1.2'
    ssl_key:                                                                  # Pre-generated SSL Key file to reference for SSL support.
    ssl_cert:                                                                 # Pre-generated SSL Certificate file to referece for SSL support.
    ssl_client_cert:                                                          # Pre-generated SSL Certificate file to reference for client verify SSL support
    ssl_verify_client:                                                        # Enables verification of client certificates. (on | off | optional | optional_no_ca)
    ssl_dhparam:                                                              # Specifies a file containing Diffie-Hellman key agreement protocol cryptographic paramenters, in PEM format, utilized for exchanging session keys between server and client.
    ssl_buffer_size:                                                          # Sets the size of the buffer used for sending data.
    ssl_ciphers:                  "{{ nginx_ssl_ciphers }}"                   # SSL ciphers enabled. Defaults to value of nginx_ssl_cipher above.
    ssl_cache:                    'shared:SSL:10m'                            #
    ssl_crl:                                                                  # Specifies CRL path in file system
    ssl_stapling:                 false                                       # Enables or disables stapling of OCSP responses by the server.
    ssl_stapling_file:                                                        # When set, the stapled OCSP response will be taken from the specified file instead of querying the OCSP responder specified in the server certificate.
    ssl_stapling_responder:                                                   # Overrides the URL of the OCSP responder specified in the Authority Information Access certificate extension.
    ssl_stapling_verify:          false                                       # Enables or disables verification of OCSP responses by the server.
    ssl_session_timeout:          '5m'                                        #
    ssl_trusted_cert:                                                         # Specifies a file with trusted CA certificates in the PEM format used to verify client certificates and OCSP responses if ssl_stapling is enabled.
    spdy:                         "{{ nginx_spdy }}"                          # Toggles SPDY protocol.
    proxy_pass:                                                               # Proxy server for the root location to connect to. Can be used in conjuction with nginx_upstream
    proxy_redirect:                                                           # Override the default proxy_redirect value of 'off'.
    proxy_read_timeout:           "{{ nginx_proxy_read_timeout }}"            # Override the default proxy read timeout value of 90 seconds
    proxy_connect_timeout:        "{{ nginx_proxy_connect_timeout }}"         # Override the default proxy connect timeout value of 90 seconds
    proxy_set_header:             []                                          #
    proxy_cache:                  false                                       #
    proxy_cache_key:                                                          # Override the default proxy_cache_key of $scheme$proxy_host$request_uri
    proxy_cache_use_stale:                                                    # Override the default proxy_cache_use_stale value of 'off'.
    proxy_cache_valid:            false                                       # Sets the time for caching different replies.
    proxy_method:                                                             # If defined, overrides the HTTP method of the request to be passed to the backend.
    proxy_set_body:                                                           # If defined, sets the body passed to the backend.
    resolver:                     []                                          # List of name servers used to resolve names of upstream servers into address.
    fastcgi_pass:                                                             # Location of fastcgi (host:port)
    fastcgi_params_file:          "{{ nginx_conf_dir }}/fastcgi_params"       # optional alternative fastcgi_params file to use
    fastcgi_script:                                                           # optional SCRIPT_FILE parameter
    uwsgi_pass:                                                               #
    uwsgi_params_file:            "{{ nginx_conf_dir }}/uwsgi_params"         #
    index_files:                  [ 'index.html', 'index.htm', 'index.php']   # Default index files for NGINX to read when traversing a directory. Use an empty list to disable
    autoindex:                                                                # Set it on 'on' or 'off 'to activate/deactivate
    server_name:                  [myvhost.internal]                          #
    www_root:                                                                 #
    rewrite_www_to_non_www:       false                                       # Adds a server directive and rewrite rule to rewrite www.domain.com to domain.com in order to avoid duplicate content (SEO)
    rewrite_to_https:                                                         # Adds a server directiv and rewrite rule to rewrite to ssl
    location_custom_cfg:                                                      #
    location_cfg_prepend:                                                     #
    location_cfg_append:                                                      #
    location_custom_cfg_prepend:                                              #
    location_custom_cfg_append:                                               #
    try_files:                                                                # Specifies the locations for files to be checked as an array. Cannot be used in conjuction with proxy_pass.
    auth_basic:                                                               # HTTP basic Authentication
    auth_basic_user_file:                                                     # Sets the httpasswd filename for the authentication realm.
    client_body_timeout:                                                      # Sets how long the server will wait for a client body. Default is 60s
    client_header_timeout:                                                    # Sets how long the server will wait for a client header. Default is 60s
    client_max_body_size:                                                     # Sets client_max_body_size
    raw_prepend:                                                              # A list of strings to prepend to the server directive (after cfg prepend directives). Do not forget semicolon on each line that requires one.
    raw_append:                                                               # A list of strings to append to the server directive (after cfg append directives). Do not forget semicolon on each line that requires one.
    location_raw_prepend:                                                     # A list of strings to prepend to the location directive (after custom_cfg directives). Do not forget semicolon on each line that requires one.
    location_raw_append:                                                      # A list of strings to append to the location directive (after custom_cfg directives). Do not forget semicolon on each line that requires one.
    vhost_cfg_prepend:                                                        # Expects a hash with custom directives to put before everything else inside vhost
    vhost_cfg_append:                                                         # Expects a hash with custom directives to put after everything else inside vhost
    vhost_cfg_ssl_prepend:        {}                                          # Expects a hash with custom directives to put before everything else inside vhost ssl
    vhost_cfg_ssl_append:         {}                                          # Expects a hash with custom directives to put after everything else inside vhost ssl
    include_files:                                                            # Adds include files to vhost
    access_log:                                                               # Where to write access log. May add additional options like log format at the end
    error_log:                                                                # Where to write error log.
    format_log:                   'combined'                                  # log format name
    passenger_cgi_param:                                                      #  Allows one to define additional CGI environment variables to pass to the backend application
    passenger_set_header:                                                     # Allows one to set headers to pass to the backend application (Passenger 5.0+)
    passenger_env_var:                                                        # Allows one to set environment variables to pass to the backend application (Passenger 5.0+)
    log_by_lua:                                                               # Run the Lua source code inlined as the <lua-script-str> at the log request processing phase.
    log_by_lua_file:                                                          # Equivalent to log_by_lua, except that the file specified by <path-to-lua-script-file> contains the Lua code, or, as from the v0.5.0rc32 release, the Lua/LuaJIT bytecode to be executed.
    use_default_location:         true                                        # Create a default (.i.e "/") location block. NOTE: Set to "false" if you need to explicitly define an nginx_location hash for "/" location.
    rewrite_rules:                []                                          #
    string_mappings:              {}                                          #
    geo_mappings:                 {}                                          #
    gzip_types:                                                               # Defines gzip_types, nginx default is text/html
    owner:                        "{{ nginx_global_owner }}"                  #
    group:                        "{{ nginx_global_group }}"                  #
    mode:                         "{{ nginx_global_mode }}"                   #
    maintenance:                  false                                       # Boolean value to set a vhost in maintenance
    maintenance_value:            'return 503'                                # Value to return when maintenance is on. Defaults to return 503.
### END vHost ###
